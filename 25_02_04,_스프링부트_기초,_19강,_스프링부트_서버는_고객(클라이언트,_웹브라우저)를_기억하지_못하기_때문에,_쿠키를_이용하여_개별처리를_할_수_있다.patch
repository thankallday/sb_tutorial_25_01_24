Subject: [PATCH] 25 02 04, 스프링부트 기초, 19강, 스프링부트 서버는 고객(클라이언트, 웹브라우저)를 기억하지 못하기 때문에, 쿠키를 이용하여 개별처리를 할 수 있다
---
Index: src/main/java/com/sbs/tutorial1/controller/HomeController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/sbs/tutorial1/controller/HomeController.java b/src/main/java/com/sbs/tutorial1/controller/HomeController.java
--- a/src/main/java/com/sbs/tutorial1/controller/HomeController.java	(revision 228e8002888e7ef1fc2514e05a4d69f19825ca9b)
+++ b/src/main/java/com/sbs/tutorial1/controller/HomeController.java	(revision d9c41161fd434568bf0fb5c30489faf1cd32fda6)
@@ -1,5 +1,8 @@
 package com.sbs.tutorial1.controller;
 
+import jakarta.servlet.http.Cookie;
+import jakarta.servlet.http.HttpServletRequest;
+import jakarta.servlet.http.HttpServletResponse;
 import lombok.AllArgsConstructor;
 import lombok.Getter;
 import lombok.Setter;
@@ -9,6 +12,7 @@
 import org.springframework.web.bind.annotation.RequestParam;
 import org.springframework.web.bind.annotation.ResponseBody;
 
+import java.io.IOException;
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.LinkedHashMap;
@@ -22,6 +26,7 @@
 public class HomeController
 {
     List<Person> personList;
+    int num = 0;
 
     public HomeController()
     {
@@ -421,6 +426,49 @@
         return "%d번 사람이 수정 되었습니다.".formatted(id);
     }
 
+    //25 02 04, 스프링부트 기초, 18강, 스프링부트는 고객을 구분하지 못한다.
+    //25 02 04, 스프링부트 기초, 19강, 스프링부트 서버는 고객(클라이언트, 웹브라우저)를 기억하지 못하기 때문에, 쿠키를 이용하여 개별처리를 할 수 있다.
+    @GetMapping("/home/increase")
+    @ResponseBody
+    public int showIncrease()
+    {
+        num++;
+        return num;
+    }
+    @GetMapping("/home/reqandresp")
+    /*
+        localhost:8080/home/reqandresp?age=20 --> Hello, I'm 20 years old.
+     */
+    @ResponseBody
+    public void showReqAndResp(HttpServletRequest req, HttpServletResponse res) throws IOException
+    {
+        int age = Integer.parseInt(req.getParameter("age"));
+        res.getWriter().append("Hello, I'm %d years old.".formatted(age));
+    }
+    @GetMapping("/home/cookie/increase")
+    /*
+        localhost:8080/home/cookie/increase
+        F10 --> See "count" cookie in the browser.
+     */
+    @ResponseBody
+    public int showCookieIncrease(HttpServletRequest req, HttpServletResponse res)
+    {
+        int countInCookie =0;
+        if (req.getCookies() != null) //요청에 쿠키가 없으면
+        {
+            countInCookie = Arrays.stream(req.getCookies()) //요청에 있는 쿠키들을 스트림으로 변환
+                .filter(c -> c.getName().equals("count")) //쿠키 이름이 count 인 것만 필터링
+                .map(Cookie::getValue) //필터링된 쿠키의 값을 가져온다.
+                .mapToInt(Integer::parseInt) //문자열을 정수로 변환
+                .findFirst() //필터링된 것 중에 첫번째를 찾는다.
+                .orElse(0); //없으면 0을 반환
+        }
+        int newCountInCookie = ++countInCookie;
+        res.addCookie(new Cookie("count", newCountInCookie + "")); //쿠키가 없으면 count 쿠키를 생성
+
+        return newCountInCookie;
+    }
+
     class Article
     {
         private final int id;
